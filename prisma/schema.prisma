generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)  // PRINCIPAL, SELLER ou USER
  createdAt DateTime @default(now())

  // Principal User to their Sellers and Clients
  createdSellers User[]   @relation("PrincipalToSellers")
  createdClients Client[] @relation("PrincipalToClients")

  // Sellers to their Clients (only)
  managedClients Client[] @relation("SellerToClients")
  
  createdBy Int?  // Reference to the Principal User who created the seller
  principal User? @relation("PrincipalToSellers", fields: [createdBy], references: [id]) // Link to Principal User
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String
  createdAt DateTime @default(now())

  // Seller responsible for the client
  sellerId  Int?
  seller    User? @relation("SellerToClients", fields: [sellerId], references: [id])

  // Principal User who initially created this client
  createdBy Int?
  principal User? @relation("PrincipalToClients", fields: [createdBy], references: [id])

  // Many-to-many relationship with tags
  tags      Tag[] @relation("ClientTags")
}

model Tag {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  clients Client[] @relation("ClientTags")
}

enum Role {
  PRINCIPAL
  SELLER
  USER
}
